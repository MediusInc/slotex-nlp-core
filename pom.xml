<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>si.slotex.nlp</groupId>
  <artifactId>slotex-nlp-core</artifactId>
  <url>https://github.com/MediusInc/slotex-nlp-core</url>
  <name>SloTex NLP Core</name>
  <version>1.1.1</version>
  <description>A web application which exposes REST endpoints for natural language processing.</description>
  <licenses>
    <license>
      <name>GNU General Public License (GPL)</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
    </license>
  </licenses>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.2.RELEASE</version>
  </parent>
  <developers>
    <developer>
      <name>Tadej Justin</name>
      <email>tadej.justin@medius.si</email>
      <organization>Medius d.o.o.</organization>
      <organizationUrl>http://www.medius.si</organizationUrl>
    </developer>
    <developer>
      <name>Mitja J. Kotnik</name>
      <email>mitja.kotnik@medius.si</email>
      <organization>Medius d.o.o.</organization>
      <organizationUrl>http://www.medius.si</organizationUrl>
    </developer>
  </developers>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <version.apache-opennlp>1.9.0</version.apache-opennlp>
    <version.slotex-nlp.entity>1.0.0</version.slotex-nlp.entity>
    <version.stanford-corenlp>3.9.1</version.stanford-corenlp>
    <version.jedis-client>2.9.0</version.jedis-client>
    <version.asciidoctor>1.5.8</version.asciidoctor>
    <version.apache-commons>2.6</version.apache-commons>
  </properties>
  <dependencies>
    <!-- dependencies for SloTex libraries -->
    <dependency>
      <groupId>si.slotex.nlp</groupId>
      <artifactId>slotex-nlp-entity</artifactId>
      <version>${version.slotex-nlp.entity}</version>
    </dependency>
    <!-- dependencies for spring-boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- dependencies for NLP projects -->
    <dependency>
      <groupId>org.apache.opennlp</groupId>
      <artifactId>opennlp-tools</artifactId>
      <version>${version.apache-opennlp}</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>${version.stanford-corenlp}</version>
    </dependency>
    <!-- dependencies for other libraries -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${version.jedis-client}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${version.apache-commons}</version>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
         <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <skipTests>${skipTests}</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.5.0.1254</version>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>sonar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.2</version>
          <configuration>
            <append>true</append>
          </configuration>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>prepare-agent-integration</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${version.asciidoctor}</version>
        <executions>
          <execution>
            <id>generate-docs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <sourceDocumentName>index.adoc</sourceDocumentName>
              <backend>html</backend>
              <attributes>
                <snippets>${project.build.directory}/generated-snippets</snippets>
                <revdate>${maven.build.timestamp}</revdate>
                <revnumber>${project.version}</revnumber>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <classpathPrefix>libs/</classpathPrefix>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Build-Time>${maven.build.timestamp}</Build-Time>
              <!--suppress UnresolvedMavenProperty -->
              <Tag-Name>${tagName}</Tag-Name>
              <!--suppress UnresolvedMavenProperty -->
              <SVN-Revision>${buildNumber}</SVN-Revision>
            </manifestEntries>
          </archive>
        </configuration>
        <!-- Unfortunately, the skip flag is not supported.  Workaround: Bind the default-jar execution to a nonexistent phase. -->
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>none</phase>
          </execution>
        </executions>
    </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                            ${project.build.outputDirectory}/static
                        </outputDirectory>
              <resources>
                <resource>
                  <directory>
                                    ${project.build.directory}/generated-docs
                                </directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.2.4</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>false</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <format>json</format>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>1.6.1</version>
        <configuration>
          <from>
            <image>pkpslotex/slotex-nlp-baseimage-docker:latest</image>
          </from>
          <to>
            <image>pkpslotex/slotex-nlp-core</image>
            <tags>
              <tag>${git.commit.id}</tag>
            </tags>
          </to>
          <container>
            <ports>
              <port>8100</port>
            </ports>
            <entrypoint>/docker-entrypoint.sh</entrypoint>
          </container>
          <extraDirectories>
            <paths>
              <path>src/main/docker</path>
              <path>data/OpenNLP</path>
            </paths>
  <permissions>
              <permission>
                <file>/docker-entrypoint.sh</file>
                <mode>755</mode>
            </permission>
            <permission>
                <file>/init-models.sh</file>
                <mode>755</mode>
              </permission>
            </permissions>
          </extraDirectories>
        </configuration>
        <executions>
          <execution>
            <id>build-and-push-docker-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>mediusinc</sonar.organization>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
